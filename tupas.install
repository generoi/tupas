<?php

/**
 * @file
 * Install, update and uninstall functions for the TUPAS module.
 */

/**
 * Defines the database schema used by the module
 *
 * @return array $schema Database schema as an array
 */
function tupas_schema() {

  $schema = array();

  // bank table
  $schema['tupas_bank'] = array(
    'description' => 'Banks supported by the TUPAS module',
    'fields' => array(
      'id' => array(
        'description' => 'bank id',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'shortname' => array(
        'description' => 'machine readable name of the bank',
        'type' => 'text',
      ),
      'longname' => array(
        'description' => 'original name of the bank',
        'type' => 'text',
      ),
      'enabled' => array(
        'description' => 'enable/disable the bank',
        'type' => 'int',
      ),
      'action_url' => array(
        'description' => 'form action URL',
        'type' => 'text',
      ),
      'cert_version' => array(
        'description' => 'certificate version',
        'type' => 'text',
      ),
      'rcv_id' => array(
        'description' => 'receiver id',
        'type' => 'text',
      ),
      'rcv_key' => array(
        'description' => 'receiver key',
        'type' => 'text',
      ),
      'keyvers' => array(
        'description' => 'key version',
        'type' => 'text',
      ),
      'encryption_alg' => array(
        'description' => 'encryption algorithm',
        'type' => 'text',
      ),
      'image_button' => array(
        'description' => 'image button filename',
        'type' => 'text',
      ),
    ),
    'primary key' => array('id'),
  );

  // user table
  $schema['tupas_user'] = array(
    'description' => 'TUPAS users',
    'fields' => array(
      'id' => array(
        'description' => 'tupas user id',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'drupal user id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'transaction_id' => array(
        'description' => 'transaction id',
        'type' => 'int',
        'size' => 'medium',
      ),
      'tupas_expiration_timestamp' => array(
        'description' => 'tupas authentication expiration timestamp',
        'type' => 'text',
      ),
    ),
    'unique keys' => array(
      'uid' => array('uid'),
      'transaction_id' => array('transaction_id'),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Installs the database schema and adds some default values to the tables
 *
 */
function tupas_install() {

  // add banks
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'handelsbanken',
    'longname' => 'Handelsbanken',
    'enabled' => 1,
    'action_url' => 'https://tunnistepalvelu.samlink.fi/TupasTunnistus/SHBtupas.html',
    'cert_version' => '0002',
    'rcv_id' => '1111111111111',
    'rcv_key' => '11111111111111111111',
    'keyvers' => '0001',
    'encryption_alg' => '01',
    'image_button' => '',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'nordea',
    'longname' => 'Nordea',
    'enabled' => 1,
    'action_url' => 'https://solo3.nordea.fi/cgi-bin/SOLO3011',
    'cert_version' => '0002',
    'rcv_id' => '87654321',
    'rcv_key' => 'LEHTI',
    'keyvers' => '0001',
    'encryption_alg' => '01',
    'image_button' => 'nordea_button_60x60px.gif',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'osuuspankki',
    'longname' => 'Osuuspankit',
    'enabled' => 1,
    'action_url' => 'https://kultaraha.op.fi/cgi-bin/krcgi',
    'cert_version' => '0003',
    'rcv_id' => 'Esittelymyyja',
    'rcv_key' => 'Esittelykauppiaansalainentunnus',
    'keyvers' => '0001',
    'encryption_alg' => '02',
    'image_button' => 'op_white_bgr-14.gif',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'sampo',
    'longname' => 'Sampo pankki',
    'enabled' => 0,
    'action_url' => 'https://verkkopankki.sampopankki.fi/SP/tupaha/TupahaApp',
    'cert_version' => '0003',
    'rcv_id' => '000000000000',
    'rcv_key' => 'jumCLB4T2ceZWGJ9ztjuhn5FaeZnTm5HpfDXWU2APRqfDcsrBs8mqkFARzm7uXKd',
    'keyvers' => '0001',
    'encryption_alg' => '02',
    'image_button' => 'logo.gif',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'saastopankit',
    'longname' => 'Säästöpankit ja paikallisosuuspankit',
    'enabled' => 1,
    'action_url' => 'https://tunnistepalvelu.samlink.fi/TupasTunnistus/TupasServlet',
    'cert_version' => '0002',
    'rcv_id' => '1111111111111',
    'rcv_key' => '11111111111111111111',
    'keyvers' => '0001',
    'encryption_alg' => '01',
    'image_button' => 'sppopmaksu.gif',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'tapiola',
    'longname' => 'Tapiola pankki',
    'enabled' => 1,
    'action_url' => 'https://pankki.tapiola.fi/service/identify',
    'cert_version' => '0002',
    'rcv_id' => 'TAPTUPASID',
    'rcv_key' => 'PAPAKAIJU',
    'keyvers' => '0001',
    'encryption_alg' => '01',
    'image_button' => '60x60_Tapiola_maksupainike.gif',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'alandsbanken',
    'longname' => 'Ålandsbanken',
    'enabled' => 0,
    'action_url' => '',
    'cert_version' => '',
    'rcv_id' => '',
    'rcv_key' => '',
    'keyvers' => '0001',
    'encryption_alg' => '',
    'image_button' => '',
  ))
  ->execute();
  $id = db_insert('tupas_bank')
  ->fields(array(
    'shortname' => 'spankki',
    'longname' => 'S-Pankki',
    'enabled' => 1,
    'action_url' => 'https://online.s-pankki.fi/service/identify',
    'cert_version' => '0002',
    'rcv_id' => 'SPANKKITUPAS',
    'rcv_key' => 'SPANKKI',
    'keyvers' => '0001',
    'encryption_alg' => '01',
    'image_button' => '',
  ))
  ->execute();

  // add role
  $role_id = db_insert('role')
  ->fields(array(
    'name' => 'tupas authenticated user',
  ))
  ->execute();

  // add permissions
  $permissions = array(
    'access tupas',
    'access areas requiring tupas authentication',
  );
  
  if(function_exists('user_role_grant_permissions')) {
    user_role_grant_permissions($role_id, $permissions);
  }
  // notify the admin
  drupal_set_message(st("TUPAS settings are available under !link and !link2",
      array('!link' => l('Administer > Site configuration > TUPAS general settings', 'admin/config/people/tupas/general'), '!link2' => l('Administer > Site configuration > TUPAS bank settings', 'admin/config/people/tupas/banks'))
  ));
}

/**
 * Uninstalls the database schema and removes some values
 *
 */
function tupas_uninstall() {

  // delete role
  db_delete('role')
  ->condition('name', 'tupas authenticated user')
  ->execute();

  // delete permissions
  db_delete('role_permission')
  ->condition('module', 'tupas')
  ->execute();

  // delete configurations
  db_delete('variable')
  ->condition('name', 'tupas%', 'LIKE')
  ->execute();

}
